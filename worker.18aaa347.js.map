{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/path-browserify/index.js","../node_modules/libmp3lame.js/lib/libmp3lame.js","../node_modules/libmp3lame.js/lib/index.js","worker.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","chunkSize","addEventListener","left","right","evt","data","chunks","Math","ceil","console","log","cont","postMessage","start","end","min","leftChunk","subarray","rightChunk","config","LAMEConfig","setChannels","setInputSampleRate","setOutputSampleRate","setBitrate","lame","build","time","encodeFloats","flush","timeEnd","encoded","buffer","encodedBuffer","slice","byteOffset","byteLength"],"mappings":"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","file":"worker.18aaa347.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","\nvar Module = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!==\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime;if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix=\"file://\";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile=\"libmp3lame.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return Promise.resolve().then(getBinary)}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmTable=Module[\"asm\"][\"L\"];removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function dynCallLegacy(sig,ptr,args){if(args&&args.length){return Module[\"dynCall_\"+sig].apply(null,[ptr].concat(args))}return Module[\"dynCall_\"+sig].call(null,ptr)}function dynCall(sig,ptr,args){if(sig.indexOf(\"j\")!=-1){return dynCallLegacy(sig,ptr,args)}return wasmTable.get(ptr).apply(null,args)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}var ExceptionInfoAttrs={DESTRUCTOR_OFFSET:0,REFCOUNT_OFFSET:4,TYPE_OFFSET:8,CAUGHT_OFFSET:12,RETHROWN_OFFSET:13,SIZE:16};function ___cxa_allocate_exception(size){return _malloc(size+ExceptionInfoAttrs.SIZE)+ExceptionInfoAttrs.SIZE}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-ExceptionInfoAttrs.SIZE;this.set_type=function(type){HEAP32[this.ptr+ExceptionInfoAttrs.TYPE_OFFSET>>2]=type};this.get_type=function(){return HEAP32[this.ptr+ExceptionInfoAttrs.TYPE_OFFSET>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+ExceptionInfoAttrs.DESTRUCTOR_OFFSET>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+ExceptionInfoAttrs.DESTRUCTOR_OFFSET>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+ExceptionInfoAttrs.CAUGHT_OFFSET>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+ExceptionInfoAttrs.CAUGHT_OFFSET>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+ExceptionInfoAttrs.RETHROWN_OFFSET>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+ExceptionInfoAttrs.RETHROWN_OFFSET>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2];HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2];HEAP32[this.ptr+ExceptionInfoAttrs.REFCOUNT_OFFSET>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=function(handle){return handle};return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=function(handle){finalizationGroup.register(handle,handle.$$,handle.$$);return handle};detachFinalizer=function(handle){finalizationGroup.unregister(handle.$$)};return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function getDynCaller(sig,ptr){assert(sig.indexOf(\"j\")>=0,\"getDynCaller should only be called with i64 sigs\");var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.indexOf(\"j\")!=-1){return getDynCaller(signature,rawFunction)}return wasmTable.get(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);var args=[rawConstructor];var destructors=[];whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}destructors.length=0;args.length=argCount;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return __emval_register(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}else{return symbol}}var emval_methodCallers=[];function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=requireHandle(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function __emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function __emval_lookupTypes(argCount,argTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAP32[(argTypes>>2)+i],\"parameter \"+i)}return a}function __emval_get_method_caller(argCount,argTypes){var types=__emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map(function(t){return t.name}).join(\"_\")+\"$\";var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);return __emval_addMethodCaller(invokerFunction)}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v))}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){abort()}function _emscripten_console_error(str){console.error(UTF8ToString(str))}function _emscripten_console_log(str){console.log(UTF8ToString(str))}function _emscripten_console_warn(str){console.warn(UTF8ToString(str))}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){requestedSize=requestedSize>>>0;var oldSize=_emscripten_get_heap_size();var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}var minHeapSize=16777216;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(minHeapSize,requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_throw_number(number){throw number}function _emscripten_throw_string(str){throw UTF8ToString(str)}function _exit(status){exit(status)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _setTempRet0($i){setTempRet0($i|0)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();__ATINIT__.push({func:function(){___wasm_call_ctors()}});var asmLibraryArg={\"b\":___assert_fail,\"v\":___cxa_allocate_exception,\"I\":___cxa_throw,\"C\":__embind_register_bool,\"s\":__embind_register_class,\"H\":__embind_register_class_constructor,\"h\":__embind_register_class_function,\"B\":__embind_register_emval,\"p\":__embind_register_float,\"g\":__embind_register_integer,\"d\":__embind_register_memory_view,\"q\":__embind_register_std_string,\"i\":__embind_register_std_wstring,\"D\":__embind_register_void,\"m\":__emval_as,\"u\":__emval_call_void_method,\"e\":__emval_decref,\"t\":__emval_get_method_caller,\"o\":__emval_get_property,\"j\":__emval_incref,\"n\":__emval_new_cstring,\"l\":__emval_run_destructors,\"k\":__emval_take_value,\"A\":_abort,\"G\":_emscripten_console_error,\"K\":_emscripten_console_log,\"J\":_emscripten_console_warn,\"y\":_emscripten_memcpy_big,\"z\":_emscripten_resize_heap,\"c\":_emscripten_throw_number,\"f\":_emscripten_throw_string,\"F\":_exit,\"E\":_fd_close,\"w\":_fd_seek,\"r\":_fd_write,\"a\":wasmMemory,\"x\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){if(implicit&&noExitRuntime&&status===0){return}if(noExitRuntime){}else{EXITSTATUS=status;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status);ABORT=true}quit_(status,new ExitStatus(status))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}noExitRuntime=true;run();\n\n\n  return Module.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = Module;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return Module; });\nelse if (typeof exports === 'object')\n  exports[\"Module\"] = Module;\n","const Module = require('./libmp3lame.js');\n\nclass LAMEConfig {\n    constructor() {\n        this._channels = null;\n        this._inputSampleRate = null;\n        this._outputSampleRate = null;\n        this._bitrate = null;\n    }\n\n    setChannels(channels) {\n        this._channels = channels;\n    }\n\n    setInputSampleRate(sampleRate) {\n        this._inputSampleRate = null;\n    }\n\n    setOutputSampleRate(sampleRate) {\n        this._outputSampleRate = sampleRate;\n    }\n\n    setBitrate(bitrate) {\n        this._bitrate = bitrate;\n    }\n\n    async build(size, wasm) {\n        const module = await Module({\n            locateFile(path, prefix) {\n                if (path === 'libmp3lame.wasm' && wasm) {\n                    return wasm;\n                } else {\n                    return prefix + path;\n                }\n            }\n        });\n        let config = new module.LAMEConfig();\n\n        if (this._channels !== null) {\n            config.setChannels(this._channels);\n        }\n        if (this._inputSampleRate !== null) {\n            config.setInputSampleRate(this._inputSampleRate);\n        }\n        if (this._outputSampleRate !== null) {\n            config.setOutputSampleRate(this._outputSampleRate);\n        }\n        if (this._bitrate !== null) {\n            config.setBitrate(this._bitrate);\n        }\n\n        return config.build(size);\n    }\n}\n\nmodule.exports = LAMEConfig;\n","import LAMEConfig from 'libmp3lame.js';\n\nconst chunkSize = 44100 * 10;\n\naddEventListener('message', async (evt) => {\n    const [left, right] = evt.data;\n\n    const chunks = Math.ceil(left.length / chunkSize);\n\n    console.log(`${chunks} chunks`);\n\n    let i = 0;\n\n    async function cont() {\n        if (i >= chunks) {\n            postMessage(null);\n            return;\n        }\n\n        console.log(`starting chunk ${i}`);\n\n        const start = i * chunkSize;\n        const end = Math.min((i + 1) * chunkSize, left.length);\n\n        const leftChunk = left.subarray(start, end);\n        const rightChunk = right.subarray(start, end);\n\n        let config = new LAMEConfig();\n        config.setChannels(2);\n        config.setInputSampleRate(44100);\n        config.setOutputSampleRate(22050);\n        config.setBitrate(48);\n\n        let lame = await config.build(1024 * 1024 * 10, 'libmp3lame.wasm');\n\n        console.time('encoding');\n        console.log('encoding');\n        lame.encodeFloats(leftChunk, rightChunk);\n        lame.flush();\n        console.timeEnd('encoding');\n\n        const encoded = lame.buffer();\n        const encodedBuffer = encoded.buffer.slice(encoded.byteOffset, encoded.byteOffset + encoded.byteLength);\n\n        postMessage(encodedBuffer);\n\n        i++;\n    }\n\n    addEventListener('message', cont);\n    cont();\n}, { once: true });\n"]}