{"version":3,"sources":["../node_modules/audio-feeder/dist/AudioFeeder.js","index.js"],"names":["corsFetch","url","options","fetch","encodeURIComponent","main","htmlReq","htmlText","text","htmlDoc","DOMParser","parseFromString","file","JSON","parse","querySelector","dataset","tralbum","trackinfo","songReq","data","arrayBuffer","audioCtx","OfflineAudioContext","console","time","audio","decodeAudioData","timeEnd","feeder","AudioFeeder","encoder","Worker","started","requested","onmessage","encodedBuffer","evt","log","onbufferlow","onstarved","stop","encodedAudio","durationBuffered","bufferThreshold","postMessage","bufferData","getChannelData","playButton","document","getElementById","addEventListener","init","start","once","disabled"],"mappings":"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,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,CAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,KAAA,MAAA,EAAA,KAAA,GAAA,EAAA,KAAA,MAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,GAAA,EAAA,GAAA,KAAA,IAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,WAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,SAAA,GAAA,IAAA,EAAA,EAAA,OAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,IAAA,EAAA,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,KAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,IAAA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,CAAA,IAAA,EAAA,EAAA,UAAA,GAAA,EAAA,EAAA,UAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA;;ACoEI,aAnFJ,IAAA,EAAA,EAAA,QAAA,iBAmFI,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjFJ,SAASA,EAAUC,EAAKC,GACbC,OAAAA,0BAA0BC,mBAAmBH,KAAQC,GAGhE,eAAeG,IACLC,MAAAA,QAAgBN,EAAU,sDAC1BO,QAAiBD,EAAQE,OAGzBC,GADY,IAAIC,WACIC,gBAAgBJ,EAAU,aAG9CK,EADUC,KAAKC,MAAML,EAAQM,cAAc,kBAAkBC,QAAQC,SACtDC,UAAU,GAAGN,KAAK,WAEjCO,QAAgBnB,EAAUY,GAC1BQ,QAAaD,EAAQE,cAErBC,EAAW,IAAIC,oBAAoB,EAAG,EAAG,OAE/CC,QAAQC,KAAK,YACPC,MAAAA,QAAcJ,EAASK,gBAAgBP,GAC7CI,QAAQI,QAAQ,YAEZC,IAAAA,EAAS,IAAIC,EAAJ,QAETC,EAAU,IAAIC,OAAO,uCACrBC,GAAU,EAEVC,GAAY,EAEhBH,EAAQI,UAAY,OAAA,IACVC,MAAAA,EAAgBC,EAAIjB,KAEtB,IAACgB,EAOD,OANAZ,QAAQc,IAAI,iBACZT,EAAOU,YAAc,cACrBV,EAAOW,UAAY,MACfhB,QAAQc,IAAI,gBACZT,EAAOY,UAKfjB,QAAQC,KAAK,YACPiB,MAAAA,QAAqBpB,EAASK,gBAAgBS,GAGhD,GAFJZ,QAAQI,QAAQ,YAEXK,GAoBOC,GAAaL,EAAOc,iBAAmBd,EAAOe,iBACtDpB,QAAQc,IAAI,iCACZJ,GAAY,EACZH,EAAQc,YAAY,QAEpBrB,QAAQc,IAAI,sBACZT,EAAOiB,WAAW,CAACJ,EAAaK,eAAe,GAAIL,EAAaK,eAAe,KAC/Eb,GAAY,OA3BF,CACJc,MAAAA,EAAaC,SAASC,eAAe,QAC3CF,EAAWG,iBAAiB,QAAS,KACjCtB,EAAOuB,KAAK,EAAG,OACfvB,EAAOe,gBAAkB,EACzBf,EAAOiB,WAAW,CAACJ,EAAaK,eAAe,GAAIL,EAAaK,eAAe,KAC/ElB,EAAOwB,QACPxB,EAAOU,YAAc,WACjBf,QAAQc,IAAI,cACRJ,EACAV,QAAQc,IAAI,sBAEZd,QAAQc,IAAI,cACZJ,GAAY,EACZH,EAAQc,YAAY,SAG7B,CAAES,MAAM,IACXN,EAAWO,UAAW,EACtBtB,GAAU,KAYlBF,EAAQc,YAAY,CAACnB,EAAMqB,eAAe,GAAIrB,EAAMqB,eAAe,KAGvE1C","file":"src.d2a126ea.js","sourceRoot":"../src","sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.AudioFeeder=e():t.AudioFeeder=e()}(window,(function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=1)}([function(t,e){\n/**\n * @file Abstraction around a queue of audio buffers.\n *\n * @author Brion Vibber <brion@pobox.com>\n * @copyright (c) 2013-2016 Brion Vibber\n * @license MIT\n */\nfunction r(t,e){if(t<1||t!==Math.round(t))throw\"Invalid channel count for BufferQueue\";this.channels=t,this.bufferSize=e,this.flush()}r.prototype.flush=function(){this._buffers=[],this._pendingBuffer=this.createBuffer(this.bufferSize),this._pendingPos=0},r.prototype.sampleCount=function(){var t=0;return this._buffers.forEach((function(e){t+=e[0].length})),t},r.prototype.createBuffer=function(t){for(var e=[],r=0;r<this.channels;r++)e[r]=new Float32Array(t);return e},r.prototype.validate=function(t){if(t.length!==this.channels)return!1;for(var e,r=0;r<t.length;r++){var i=t[r];if(!(i instanceof Float32Array))return!1;if(0==r)e=i.length;else if(i.length!==e)return!1}return!0},r.prototype.appendBuffer=function(t){if(!this.validate(t))throw\"Invalid audio buffer passed to BufferQueue.appendBuffer\";for(var e=t[0].length,r=this.channels,i=this._pendingPos,n=this._pendingBuffer,o=this.bufferSize,a=0;a<e;a++){for(var f=0;f<r;f++)n[f][i]=t[f][a];++i==o&&(this._buffers.push(n),i=this._pendingPos=0,n=this._pendingBuffer=this.createBuffer(o))}this._pendingPos=i},r.prototype.prependBuffer=function(t){if(!this.validate(t))throw\"Invalid audio buffer passed to BufferQueue.prependBuffer\";var e=this._buffers.slice(0);e.push(this.trimBuffer(this._pendingBuffer,0,this._pendingPos)),this.flush(),this.appendBuffer(t);for(var r=0;r<e.length;r++)this.appendBuffer(e[r])},r.prototype.nextBuffer=function(){if(this._buffers.length)return this._buffers.shift();var t=this.trimBuffer(this._pendingBuffer,0,this._pendingPos);return this._pendingBuffer=this.createBuffer(this.bufferSize),this._pendingPos=0,t},r.prototype.trimBuffer=function(t,e,r){var i=t[0].length,n=e+Math.min(r,i);if(0==e&&n>=i)return t;for(var o=[],a=0;a<this.channels;a++)o[a]=t[a].subarray(e,n);return o},t.exports=r},function(t,e,r){!function(){r(0);var e=r(2),i=r(4);function n(t){this._options=t||{},this._backend=null,this._resampleFractional=0,this._resampleLastSampleData=void 0,this._tempoChanger=null}n.prototype.rate=0,n.prototype.targetRate=0,n.prototype.channels=0,n.prototype.bufferSize=0,Object.defineProperty(n.prototype,\"bufferDuration\",{get:function(){return this.targetRate?this.bufferSize/this.targetRate:0}}),Object.defineProperty(n.prototype,\"bufferThreshold\",{get:function(){return this._backend?this._backend.bufferThreshold/this.targetRate:0},set:function(t){if(!this._backend)throw\"Invalid state: AudioFeeder cannot set bufferThreshold before init\";this._backend.bufferThreshold=Math.round(t*this.targetRate)}}),Object.defineProperty(n.prototype,\"playbackPosition\",{get:function(){return this._backend?this.getPlaybackState().playbackPosition:0}}),Object.defineProperty(n.prototype,\"outputPlaybackPosition\",{get:function(){return this._backend?this.getPlaybackState().outputPlaybackPosition:0}}),Object.defineProperty(n.prototype,\"durationBuffered\",{get:function(){return this._backend?this.getPlaybackState().samplesQueued/this.targetRate:0}}),Object.defineProperty(n.prototype,\"muted\",{get:function(){if(this._backend)return this._backend.muted;throw\"Invalid state: cannot get mute before init\"},set:function(t){if(!this._backend)throw\"Invalid state: cannot set mute before init\";this._backend.muted=t}}),n.prototype.mute=function(){this.muted=!0},n.prototype.unmute=function(){this.muted=!1},Object.defineProperty(n.prototype,\"volume\",{get:function(){if(this._backend)return this._backend.volume;throw\"Invalid state: cannot get volume before init\"},set:function(t){if(!this._backend)throw\"Invalid state: cannot set volume before init\";this._backend.volume=t}}),Object.defineProperty(n.prototype,\"tempo\",{get:function(){if(this._tempoChanger)return this._tempoChanger.getTempo();throw\"Invalid state: cannot get tempo before init\"},set:function(t){if(!this._tempoChanger)throw\"Invalid state: cannot set tempo before init\";this._tempoChanger.setTempo(t)}}),n.prototype.init=function(t,r){if(this.channels=t,this.rate=r,this._options.backendFactory)this._backend=this._options.backendFactory(t,r,this._options);else{if(!e.isSupported())throw\"No supported backend\";this._backend=new e(t,r,this._options)}this.targetRate=this._backend.rate,this.bufferSize=this._backend.bufferSize,this._tempoChanger=i({sampleRate:this.targetRate,numChannels:t,tempo:1}),this._backend.onstarved=function(){this.onstarved&&this.onstarved()}.bind(this),this._backend.onbufferlow=function(){this.onbufferlow&&this.onbufferlow()}.bind(this)},n.prototype._resample=function(t){var e=this.rate,r=this.channels,i=this._backend.rate,n=this._backend.channels;if(e==i&&r==n)return t;var o,a=[],f=t[0].length,u=this._resampleFractional,s=f*i/e+u,h=Math.floor(s),p=s-h;o=e<i?function(t,r,n,o){for(var a=function(e){return e<0?n&&n.length+e>0?n[n.length+e]:t[0]:t[e]},f=0;f<r.length;f++){var s,h=(f+1-u)*e/i-1,p=Math.floor(h),l=Math.ceil(h);s=p==l?a(p):a(p)*(l-h)+a(l)*(h-p),r[f]=o*s}}:function(t,e,r,i){for(var n=0;n<e.length;n++)e[n]=i*t[n*t.length/e.length|0]};var l=1;n>r&&(l=Math.SQRT1_2);for(var c=0;c<n;c++){var d=c;c>=r&&(d=0);var _=t[d],b=new Float32Array(h);o(_,b,this._resampleLastSampleData?this._resampleLastSampleData[d]:void 0,l),a.push(b)}return this._resampleFractional=p,this._resampleLastSampleData=t,a},n.prototype.bufferData=function(t){if(!this._backend)throw\"Invalid state: AudioFeeder cannot bufferData before init\";var e=this._resample(t);e=this._tempoChanger.process(e),this._backend.appendBuffer(e)},n.prototype.getPlaybackState=function(){if(this._backend){var t=this._backend.getPlaybackState();return t.outputPlaybackPosition=t.playbackPosition,t.playbackPosition=this._tempoChanger.mapOutputToInputTime(t.outputPlaybackPosition),t}throw\"Invalid state: AudioFeeder cannot getPlaybackState before init\"},n.prototype.waitUntilReady=function(t){if(!this._backend)throw\"Invalid state: AudioFeeder cannot waitUntilReady before init\";this._backend.waitUntilReady(t)},n.prototype.start=function(){if(!this._backend)throw\"Invalid state: AudioFeeder cannot start before init\";this._backend.start()},n.prototype.stop=function(){if(!this._backend)throw\"Invalid state: AudioFeeder cannot stop before init\";this._backend.stop()},n.prototype.flush=function(){if(this._resampleFractional=0,this._resampleLastSampleData=void 0,!this._backend)throw\"Invalid state: AudioFeeder cannot flush before init\";this._tempoChanger.flush(this.durationBuffered),this._backend.flush()},n.prototype.close=function(){this._backend&&(this._backend.close(),this._backend=null)},n.prototype.onstarved=null,n.prototype.onbufferlow=null,n.isSupported=function(){return!!Float32Array&&e.isSupported()},n.initSharedAudioContext=function(){return e.isSupported()?e.initSharedAudioContext():null},t.exports=n}()},function(t,e,r){\n/**\n * @file Web Audio API backend for AudioFeeder\n * @author Brion Vibber <brion@pobox.com>\n * @copyright (c) 2013-2016 Brion Vibber\n * @license MIT\n */\n!function(){var e=window.AudioContext||window.webkitAudioContext,i=r(0),n=r(3);function o(t,e,r){var n=r.audioContext||o.initSharedAudioContext();if(this._context=n,this.output=r.output||n.destination,this.rate=n.sampleRate,this.channels=2,r.bufferSize&&(this.bufferSize=0|r.bufferSize),this.bufferThreshold=2*this.bufferSize,this._bufferQueue=new i(this.channels,this.bufferSize),this._playbackTimeAtBufferTail=n.currentTime,this._queuedTime=0,this._delayedTime=0,this._dropped=0,this._liveBuffer=this._bufferQueue.createBuffer(this.bufferSize),n.createScriptProcessor)this._node=n.createScriptProcessor(this.bufferSize,0,this.channels);else{if(!n.createJavaScriptNode)throw new Error(\"Bad version of web audio API?\");this._node=n.createJavaScriptNode(this.bufferSize,0,this.channels)}}o.prototype.bufferSize=4096,o.prototype.bufferThreshold=8192,o.prototype._volume=1,Object.defineProperty(o.prototype,\"volume\",{get:function(){return this._volume},set:function(t){this._volume=+t}}),o.prototype._muted=!1,Object.defineProperty(o.prototype,\"muted\",{get:function(){return this._muted},set:function(t){this._muted=!!t}}),o.prototype._audioProcess=function(t){var e,r,i,o,a;a=\"number\"==typeof t.playbackTime?t.playbackTime:this._context.currentTime+this.bufferSize/this.rate;var f=this._playbackTimeAtBufferTail;if(f<a&&(this._delayedTime+=a-f),this._bufferQueue.sampleCount()<this.bufferSize&&this.onstarved&&this.onstarved(),this._bufferQueue.sampleCount()<this.bufferSize){for(e=0;e<this.channels;e++)for(i=t.outputBuffer.getChannelData(e),o=0;o<this.bufferSize;o++)i[o]=0;this._dropped++}else{var u=this.muted?0:this.volume,s=this._bufferQueue.nextBuffer();if(s[0].length<this.bufferSize)throw\"Audio buffer not expected length.\";for(e=0;e<this.channels;e++)for(r=s[e],this._liveBuffer[e].set(s[e]),i=t.outputBuffer.getChannelData(e),o=0;o<r.length;o++)i[o]=r[o]*u;this._queuedTime+=this.bufferSize/this.rate,this._playbackTimeAtBufferTail=a+this.bufferSize/this.rate,this._bufferQueue.sampleCount()<Math.max(this.bufferSize,this.bufferThreshold)&&this.onbufferlow&&n(this.onbufferlow.bind(this))}},o.prototype._samplesQueued=function(){return this._bufferQueue.sampleCount()+Math.floor(this._timeAwaitingPlayback()*this.rate)},o.prototype._timeAwaitingPlayback=function(){return Math.max(0,this._playbackTimeAtBufferTail-this._context.currentTime)},o.prototype.getPlaybackState=function(){return{playbackPosition:this._queuedTime-this._timeAwaitingPlayback(),samplesQueued:this._samplesQueued(),dropped:this._dropped,delayed:this._delayedTime}},o.prototype.waitUntilReady=function(t){t()},o.prototype.appendBuffer=function(t){this._bufferQueue.appendBuffer(t)},o.prototype.start=function(){this._node.onaudioprocess=this._audioProcess.bind(this),this._node.connect(this.output),this._playbackTimeAtBufferTail=this._context.currentTime},o.prototype.stop=function(){if(this._node){var t=this._timeAwaitingPlayback();if(t>0){var e=Math.round(t*this.rate),r=this._liveBuffer?this._liveBuffer[0].length:0;e>r?(this._bufferQueue.prependBuffer(this._liveBuffer),this._bufferQueue.prependBuffer(this._bufferQueue.createBuffer(e-r))):this._bufferQueue.prependBuffer(this._bufferQueue.trimBuffer(this._liveBuffer,r-e,e)),this._playbackTimeAtBufferTail-=t}this._node.onaudioprocess=null,this._node.disconnect()}},o.prototype.flush=function(){this._bufferQueue.flush()},o.prototype.close=function(){this.stop(),this._context=null},o.prototype.onstarved=null,o.prototype.onbufferlow=null,o.isSupported=function(){return!!e},o.sharedAudioContext=null,o.initSharedAudioContext=function(){if(!o.sharedAudioContext&&o.isSupported()){var t,r=new e;if(r.createScriptProcessor)t=r.createScriptProcessor(1024,0,2);else{if(!r.createJavaScriptNode)throw new Error(\"Bad version of web audio API?\");t=r.createJavaScriptNode(1024,0,2)}t.connect(r.destination),t.disconnect(),o.sharedAudioContext=r}return o.sharedAudioContext},t.exports=o}()},function(t,e){t.exports=function(){if(void 0!==window.setImmediate)return window.setImmediate;if(window&&window.postMessage){var t=[];return window.addEventListener(\"message\",(function(e){if(e.source===window){var r=e.data;if(\"object\"==typeof r&&r.nextTickBrowserPingMessage){var i=t.pop();i&&i()}}})),function(e){t.push(e),window.postMessage({nextTickBrowserPingMessage:!0},document.location.toString())}}return function(t){setTimeout(t,0)}}()},function(t,e,r){var i;window,i=function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=1)}([function(t,e){var r={float_array:function(t){return new Float32Array(t)},blit:function(t,e,r,i,n){r.set(t.subarray(e,e+n),i)}};t.exports=r},function(t,e,r){var i,n;i=r(0),n=r(2),t.exports=function(t){var e=(t=t||{}).sampleRate||44100,r=t.wsizeLog||11,o=t.tempo||1,a=(t.numChannels,Math.pow(2,50/1200)-1),f=1<<r,u=n(r),s=1<<r-2;s-=s%100;for(var h=i.float_array(f+s+5),p=i.float_array(f+s+5),l=s,c=s,d=i.float_array(f),_=0;_<f;_++)d[_]=.5*(1-Math.cos(2*Math.PI*_/f));var b=1+(f>>1),m=i.float_array(b),v=i.float_array(b),y=i.float_array(b),g=i.float_array(b),w=i.float_array(b),k=i.float_array(b),S=1+(b>>1),P=[0,0],B=[],M=[],T=[],x=[];for(_=0;_<2;_++)B.push(i.float_array(S)),M.push(i.float_array(S)),T.push(i.float_array(S)),x.push(i.float_array(b));var A=i.float_array(S),I=i.float_array(S),C=0,j=0,O=[{in_time:0,out_time:0,tempo:o}],z=0,Q=0,F=1,R=0,N=0,D=0,L=0,E={mapOutputToInputTime:function(t){for(var e=O.length-1;t<O[e].out_time&&e>0;)e--;var r=O[e];return r.in_time+r.tempo*(t-r.out_time)},flush:function(t){R=0,P=[0,0],Q=0,L=0,D=0;for(var e=0;e<2;e++)for(var r=0;r<b;r++)x[e][r]=0;for(e=0;e<h.length;e++)h[e]=0;for(e=0;e<p.length;e++)p[e]=0;if(t){j=Math.max(0,j-t),C=E.mapOutputToInputTime(j);for(var i=O.length-1;j<=O[i].out_time&&i>=0;)O.pop(),i--;O.push({in_time:C,out_time:j,tempo:o})}},getTempo:function(){return o},setTempo:function(t){l=c=s,t>=1?c=Math.round(l/t):l=Math.round(c*t),N=(1/t-1*c/l)*l,F=function(t,e){for(var r=t.length/e|0,i=0,n=0;n<r;n++)i+=t[n*e];return.9/i}(d,c),o=t;var e=O[O.length-1];e.out_time==j?e.tempo=t:O.push({in_time:C,out_time:j,tempo:t})}};E.flush(0),E.setTempo(o);var J=function(t,e,r){var i=Math.floor(r),n=i%2==1?-1:1;return Math.atan2(n*(e[i]-e[i+1]),n*(t[i]-t[i+1]))},U=function(t,e,r,i,n){var o=2*Math.PI/f*.5*(i+e)*l;return(function(t){return t-2*Math.PI*Math.round(t/(2*Math.PI))}(t-r-o)+o)*n},q=function(t,e,r,i,n,o){for(var u=t%2,s=1-u,h=x[s],p=P[s],l=B[s],c=M[s],d=T[s],_=x[u],b=1;b<_.length;b++)_[b]=e[b]*e[b]+r[b]*r[b];var m=B[u],v=P[u]=function(t,e){for(var r=0,i=0;i<t.length;i++)t[i]>r&&(r=t[i]);var n=1e-8*r,o=1,f=1;for(e[0]=1,i=2;i<t.length;i++){var u=i*a;if(t[i]>n&&t[i]>t[i-1]&&t[i]>=t[i+1]){var s=i+(t[i-1]-t[i+1])/(2*(t[i-1]-2*t[i]+t[i+1]));s-e[o-1]>u?(e[o++]=s,f=i):t[i]>t[f]&&(e[o-1]=s,f=i)}}return o}(_,m),y=M[u],g=T[u];if(0!=t&&0!=v){var w=0;for(D=0;D<v;D++){for(L=m[D];m[D]>l[w]&&w!=p;)++w;var k=w;w>0&&L-l[w-1]<l[w]-L&&(k=w-1);var S=L*a;if(Math.abs(l[k]-L)<S&&h[Math.round(l[k])]>.1*_[Math.round(L)]){var C=J(e,r,L),j=c[k]+d[k]+U(C,L,c[k],l[k],o)-C;y[D]=C,g[D]=j,A[D]=Math.cos(j),I[D]=Math.sin(j)}else y[D]=J(e,r,L),g[D]=0,A[D]=1,I[D]=0}m[v]=2*f;var O=m[k=0],z=m[k+1],Q=A[k],F=I[k];for(b=1;b<e.length-1;b++){b>=O&&b-O>z-b&&(O=m[++k],z=m[k+1],Q=A[k],F=I[k]);var R=e[b]*Q-r[b]*F,N=e[b]*F+r[b]*Q;e[b]=R,r[b]=N}}else for(var D=0;D<v;D++){var L=m[D];c[D]=d[D]=J(e,r,L)}},G=function(){var t=0|(R+=2*N);R-=t;for(var e=0;e<f;e++)u.m_re[e]=d[e]*h[e],u.m_im[e]=d[e]*h[l+e];i.blit(h,2*l,h,0,f-l),u.inplace(!1),u.unpack(m,v,y,g),q(z,m,v,0,0,1*c/l),q(z+1,y,g,0,0,1*(c+t)/l),i.blit(y,0,w,0,b),i.blit(g,0,k,0,b),u.repack(m,v,y,g),u.inplace(!0);var r=p.length;for(i.blit(p,Q,p,0,r-Q),e=r-Q;e<r;e++)p[e]=0;var n=0,o=F;for(e=0;e<c;e++)Math.abs(2*u.m_re[e])>n&&(n=Math.abs(2*u.m_re[e]));for(e=0;e<f-c;e++)Math.abs(u.m_re[e+c+t]+u.m_im[e])>n&&(n=Math.abs(u.m_re[e+c+t]+u.m_im[e]));for(e=f-c;e<f;e++)Math.abs(2*u.m_im[e])>n&&(n=Math.abs(2*u.m_im[e]));var a=1/Math.floor(1*f/(2*c));for(o*n>a&&(o=a/n),e=0;e<f;e++)p[e]+=o*u.m_re[e],p[e+c+t]+=o*u.m_im[e];return z+=2,Q=2*c+t};return E.process=function(t){var r=t[0].length,n=t[0];if(t.length>1){n=i.float_array(t[0].length);for(var a=1/t.length,u=0;u<t.length;u++)for(var s=0;s<r;s++)n[s]+=a*t[u][s]}if(1==o){if(L+D>0){var d=L+D+r,_=[];for(u=0;u<t.length;u++){var b=i.float_array(d);i.blit(p,0,b,0,L),i.blit(h,0,b,L,D),i.blit(t[u],0,b,L+D,r),_.push(b)}E.flush(0),r=d,t=_}return C+=r/e,j+=r/e,t}var m=D+r-(f-l),v=2*Math.floor(Math.max(0,m)/(2*l)),y=L+c*v+Math.floor(R+N*v);L>y&&(y=L);var g=i.float_array(y);i.blit(p,0,g,0,L);for(var w=0,k=L,S=0,P=0;;){var B=f+l-D;if(w+B>r){i.blit(n,w,h,D,r-w),D+=r-w,w=r;break}B<=0?D-=2*l:(i.blit(n,w,h,D,B),w+=B,D=f-l),P=G(),C+=2*l/e,j+=P/e,(S=k+P-y)<0&&(S=0),i.blit(p,0,g,k,P-S),k+=P}i.blit(p,P-S,p,0,S),L=S;var M=[];for(u=0;u<t.length;u++)M.push(g);return M},E}},function(t,e,r){\"use strict\";var i=r(0);t.exports=function(t){for(var e=1<<t,r={m_logN:t,m_N:e,m_invN:1/e,m_re:i.float_array(e),m_im:i.float_array(e),m_revTgt:new Array(e)},n=0;n<e;n++){for(var o=n,a=0,f=0;f<t;f++)a<<=1,a|=1&o,o>>=1;r.m_revTgt[n]=a}r.twiddleRe=i.float_array(r.m_logN),r.twiddleIm=i.float_array(r.m_logN);for(var u=1,s=0;s<r.m_logN;s++){var h=2*u*Math.PI*r.m_invN;r.twiddleRe[s]=Math.cos(h),r.twiddleIm[s]=Math.sin(h),u<<=1}r.inplace=function(t){var e=r.m_re,i=r.m_im,n=r.m_N,o=r.m_logN,a=n>>1,f=n>>1,u=n;if(t)for(var s=1/n,h=0;h<n;h++)e[h]*=s,i[h]*=s;for(var p=0;p<o;p++){var l=r.twiddleRe[p],c=r.twiddleIm[p];t||(c*=-1);for(var d=0;d<n;){for(var _=d,b=d+f,m=1,v=0,y=0;y<a;y++){var g=e[_],w=i[_],k=e[b],S=i[b];e[_]=g+k,i[_]=w+S,k=g-k,S=w-S,e[b]=k*m-S*v,i[b]=k*v+S*m,_++,b++;var P=m;m=m*l-v*c,v=P*c+v*l}d+=u}a>>=1,f>>=1,u>>=1}for(var B,M,T=r.m_revTgt,x=0;x<n;x++)T[x]>x&&(M=e[B=T[x]],e[B]=e[x],e[x]=M,M=i[B],i[B]=i[x],i[x]=M)};var p=e>>1;return r.unpack=function(t,i,n,o){t[0]=r.m_re[0],n[0]=r.m_im[0],i[0]=o[0]=0,t[p]=r.m_re[p],n[p]=r.m_im[p],i[p]=o[p]=0;for(var a=1;a<p;a++)t[a]=(r.m_re[a]+r.m_re[e-a])/2,i[a]=(r.m_im[a]-r.m_im[e-a])/2,n[a]=(r.m_im[a]+r.m_im[e-a])/2,o[a]=(-r.m_re[a]+r.m_re[e-a])/2},r.repack=function(t,i,n,o){r.m_re[0]=t[0],r.m_im[0]=n[0],r.m_re[p]=t[p],r.m_im[p]=n[p];for(var a=1;a<p;a++)r.m_re[a]=t[a]-o[a],r.m_im[a]=i[a]+n[a],r.m_re[e-a]=t[a]+o[a],r.m_im[e-a]=-i[a]+n[a]},r}}])},t.exports=i()}])}));","import AudioFeeder from 'audio-feeder';\n\nfunction corsFetch(url, options) {\n    return fetch(`https://c.l3.pm/?${encodeURIComponent(url)}`, options);\n}\n\nasync function main() {\n    const htmlReq = await corsFetch('https://homestuck.bandcamp.com/track/megalovania-2');\n    const htmlText = await htmlReq.text();\n\n    const domParser = new DOMParser();\n    const htmlDoc = domParser.parseFromString(htmlText, 'text/html');\n\n    const tralbum = JSON.parse(htmlDoc.querySelector('[data-tralbum]').dataset.tralbum);\n    const file = tralbum.trackinfo[0].file['mp3-128'];\n\n    const songReq = await corsFetch(file);\n    const data = await songReq.arrayBuffer();\n\n    const audioCtx = new OfflineAudioContext(2, 1, 44100);\n\n    console.time('decoding');\n    const audio = await audioCtx.decodeAudioData(data);\n    console.timeEnd('decoding');\n\n    let feeder = new AudioFeeder();\n\n    let encoder = new Worker('worker.js');\n    let started = false;\n\n    let requested = false;\n\n    encoder.onmessage = async (evt) => {\n        const encodedBuffer = evt.data;\n\n        if (!encodedBuffer) {\n            console.log('done encoding');\n            feeder.onbufferlow = () => {};\n            feeder.onstarved = () => {\n                console.log('done playing');\n                feeder.stop();\n            };\n            return;\n        }\n\n        console.time('decoding');\n        const encodedAudio = await audioCtx.decodeAudioData(encodedBuffer);\n        console.timeEnd('decoding');\n\n        if (!started) {\n            const playButton = document.getElementById('play');\n            playButton.addEventListener('click', () => {\n                feeder.init(2, 44100);\n                feeder.bufferThreshold = 3;\n                feeder.bufferData([encodedAudio.getChannelData(0), encodedAudio.getChannelData(1)]);\n                feeder.start();\n                feeder.onbufferlow = function() {\n                    console.log('buffer low');\n                    if (requested) {\n                        console.log('already requested');\n                    } else {\n                        console.log('requesting');\n                        requested = true;\n                        encoder.postMessage(null);\n                    }\n                };\n            }, { once: true });\n            playButton.disabled = false;\n            started = true;\n        } else if (!requested && feeder.durationBuffered < feeder.bufferThreshold) {\n            console.log('feeder wants more, requesting');\n            requested = true;\n            encoder.postMessage(null);\n        } else {\n            console.log('giving feeder data');\n            feeder.bufferData([encodedAudio.getChannelData(0), encodedAudio.getChannelData(1)]);\n            requested = false;\n        }\n    };\n\n    encoder.postMessage([audio.getChannelData(0), audio.getChannelData(1)]);\n};\n\nmain();\n"]}